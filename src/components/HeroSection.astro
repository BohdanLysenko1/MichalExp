---

---

<section class="relative w-full min-h-[60vh] sm:min-h-[70vh] md:min-h-[80vh] flex items-center justify-center overflow-hidden">
  <!-- Image carousel with overlay -->
  <div class="absolute inset-0 z-0 carousel-container">
    <!-- Images -->
    <div class="carousel-slide absolute inset-0 opacity-100 transition-opacity duration-1000">
      <img src="/pictures/bathroom/shower3.jpeg" alt="Remodeling project shower3" loading="lazy" decoding="async" class="lazy-img object-cover" />
    </div>
    <div class="carousel-slide absolute inset-0 opacity-0 transition-opacity duration-1000">
      <img src="/pictures/bathroom/shower2.jpg" alt="Remodeling project shower2" loading="lazy" decoding="async" class="lazy-img object-cover" />
    </div>
    <div class="carousel-slide absolute inset-0 opacity-0 transition-opacity duration-1000">
      <img src="/pictures/kitchen/fullKitchen.jpeg" alt="Remodeling project fullKitchen" loading="lazy" decoding="async" class="lazy-img object-cover" />
    </div>
    <div class="carousel-slide absolute inset-0 opacity-0 transition-opacity duration-1000">
      <img src="/pictures/bathroom/shower4.jpeg" alt="Remodeling project shower4" loading="lazy" decoding="async" class="lazy-img object-cover" />
    </div>
    <div class="carousel-slide absolute inset-0 opacity-0 transition-opacity duration-1000">
      <img src="/pictures/bathroom/shower6.jpeg" alt="Remodeling project shower6" loading="lazy" decoding="async" class="lazy-img object-cover" />
    </div>
    <div class="carousel-slide absolute inset-0 opacity-0 transition-opacity duration-1000">
      <img src="/pictures/bathroom/showerBlue5.jpeg" alt="Remodeling project showerBlue5" loading="lazy" decoding="async" class="lazy-img object-cover" />
    </div>
    <div class="carousel-slide absolute inset-0 opacity-0 transition-opacity duration-1000">
      <img src="/pictures/kitchen/fullKitchen2.jpeg" alt="Remodeling project fullKitchen2" loading="lazy" decoding="async" class="lazy-img object-cover" />
    </div>
    <div class="carousel-slide absolute inset-0 opacity-0 transition-opacity duration-1000">
      <img src="/pictures/bathroom/sink1.jpeg" alt="Remodeling project sink1" loading="lazy" decoding="async" class="lazy-img object-cover" />
    </div>
    <div class="carousel-slide absolute inset-0 opacity-0 transition-opacity duration-1000">
      <img src="/pictures/stairs/stairs5.jpg" alt="Remodeling project stairs5" loading="lazy" decoding="async" class="lazy-img object-cover" />
    </div>

    
    <!-- Dark overlay -->
    <div class="absolute inset-0 bg-black/40 z-10"></div>
    
    <!-- Carousel controls -->
    <button class="absolute left-4 top-1/2 -translate-y-1/2 z-20 bg-white/20 hover:bg-white/40 text-white w-10 h-10 rounded-full flex items-center justify-center focus:outline-none" id="prev-btn" aria-label="Previous slide">
      ←
    </button>
    <button class="absolute right-4 top-1/2 -translate-y-1/2 z-20 bg-white/20 hover:bg-white/40 text-white w-10 h-10 rounded-full flex items-center justify-center focus:outline-none" id="next-btn" aria-label="Next slide">
      →
    </button>
    
    <!-- Carousel indicators -->
    <div class="absolute bottom-6 left-1/2 -translate-x-1/2 z-20 flex flex-wrap justify-center gap-2 w-full max-w-xs px-2">
      {Array(9).fill(0).map((_, i) => (
        <button 
          class={`w-2 h-2 sm:w-2.5 sm:h-2.5 rounded-full ${i === 0 ? 'bg-white active' : 'bg-white/50 hover:bg-white'} carousel-indicator`} 
          data-index={i} 
          aria-label={`Go to slide ${i+1}`}
        ></button>
      ))}
    </div>
  </div>
  
  <!-- Centered content box -->
  <div class="relative z-0 container-premium text-center max-w-4xl w-full px-4 sm:px-0">
    <div class="bg-white/90 backdrop-blur-sm py-6 sm:py-8 px-4 sm:px-6 md:px-12 rounded-lg shadow-2xl w-full sm:w-auto">
      <p class="text-base sm:text-lg md:text-xl font-medium text-gray-800 mb-3">
        Broad Vision. Inspired Design. Superior Construction.
      </p>
      
      <h1 class="text-2xl sm:text-3xl md:text-5xl font-bold font-display mb-6 text-[color:var(--primary)] leading-tight">
        MichalExp Remodeling
      </h1>
      
      <div class="btn-conteiner">
        <button class="btn-content" data-estimate-button aria-label="Schedule a Free Estimate">
          <span class="sm:hidden">Estimate</span><span class="hidden sm:inline">Schedule an Estimate</span>
          <span class="icon-arrow">
            <svg width="40" height="20" viewBox="0 0 50 20" fill="none" xmlns="http://www.w3.org/2000/svg">
              <g id="arrow-icon-one">
                <path d="M0 10 H40" stroke="white" stroke-width="3"/>
              </g>
              <g id="arrow-icon-two">
                <path d="M40 10 L35 5" stroke="white" stroke-width="3"/>
                <path d="M40 10 L35 15" stroke="white" stroke-width="3"/>
              </g>
              <g id="arrow-icon-three">
                <circle cx="47" cy="10" r="3" fill="white" />
              </g>
            </svg>
          </span>
        </button>
      </div>
    </div>
  </div>
</section>

<script type="module">
  document.addEventListener('DOMContentLoaded', () => {
    const slides = document.querySelectorAll('.carousel-slide');
    const indicators = document.querySelectorAll('.carousel-indicator');
    const prevBtn = document.getElementById('prev-btn');
    const nextBtn = document.getElementById('next-btn');
    let currentSlide = 0;
    let slideInterval;
    const intervalTime = 5000;
    
    function startCarousel() {
      slideInterval = setInterval(nextSlide, intervalTime);
    }
    
    function resetInterval() {
      clearInterval(slideInterval);
      startCarousel();
    }
    
    function showSlide(n) {
      slides.forEach(slide => {
        slide.classList.remove('opacity-100');
        slide.classList.add('opacity-0');
      });
      
      slides[n].classList.remove('opacity-0');
      slides[n].classList.add('opacity-100');
      
      indicators.forEach(indicator => {
        indicator.classList.remove('active', 'bg-white');
        indicator.classList.add('bg-white/50');
      });
      
      indicators[n].classList.add('active', 'bg-white');
      indicators[n].classList.remove('bg-white/50');
    }
    
    function nextSlide() {
      currentSlide = (currentSlide + 1) % slides.length;
      showSlide(currentSlide);
    }
    
    function prevSlide() {
      currentSlide = (currentSlide - 1 + slides.length) % slides.length;
      showSlide(currentSlide);
    }
    
    prevBtn.addEventListener('click', () => {
      prevSlide();
      resetInterval();
    });
    
    nextBtn.addEventListener('click', () => {
      nextSlide();
      resetInterval();
    });
    
    indicators.forEach((indicator, index) => {
      indicator.addEventListener('click', () => {
        currentSlide = index;
        showSlide(currentSlide);
        resetInterval();
      });
    });
    
    showSlide(currentSlide);
    startCarousel();
    
    const btn = document.querySelector('[data-estimate-button]');
    if (btn) {
      btn.addEventListener('click', e => {
        e.preventDefault();
        window.dispatchEvent(new CustomEvent('openEstimateModal'));
      });
    }
  });
</script>
